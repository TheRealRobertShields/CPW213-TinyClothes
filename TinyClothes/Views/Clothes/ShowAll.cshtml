@model IEnumerable<TinyClothes.Models.Clothing>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor  http
@{
    ViewData["Title"] = "List Clothing Inventory";
}

<h1>Clothing Inventory</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["Message"]</div>
}
<p>
    <a asp-action="Search" asp-controller="Clothes">Search</a>
</p>
<p>
    <a asp-action="Add" asp-controller="Clothes">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ItemId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ItemId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            @{ 
                // Get current URL path "/Clothes/ShowAll"
                string previousURL = http.HttpContext.Request.Path;
                // Add query string "?page=2"
                previousURL += http.HttpContext.Request.QueryString.Value;
            }
            <td>
                <a asp-action="Edit" asp-route-id="@item.ItemId" class="btn btn-primary">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.ItemId" class="btn btn-danger">Delete</a> |
                <a asp-action="AddToCart" asp-route-id="@item.ItemId" asp-route-prevUrl="@previousURL" asp-controller="Cart" class="btn btn-outline-light">Add to Cart</a>
            </td>
        </tr>
}
    </tbody>
</table>

<ul class="pagination">
    @* Print page numbers *@
    @for (int i = 1; i <= (int)ViewData["MaxPage"]; i++)
    {
        if (i != (int)ViewData["currentPage"])
        {
            <li class="page-item">
                <a class="page-link" asp-action="ShowAll" asp-route-page="@i">@i</a>
            </li>
        }
        else
        {
            <li class="page-item active">
                <a class="page-link" href="#">@i</a>
            </li>
        }
    }
</ul>